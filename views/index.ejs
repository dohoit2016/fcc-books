<!DOCTYPE html>
<html>
	<head>
		<title><%= title %></title>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<% include header %>
	</head>
	</head>
	<body>
		<div class="col-xs-12 col-sm-12 col-md-8 col-lg-8 col-lg-offset-2 col-md-offset-2">
		<% include nav %>
		</div>
		<div class="col-xs-12 col-sm-12 col-md-8 col-lg-8 col-lg-offset-2 col-md-offset-2">
		<h2>Click on books to trade</h2>
		</div>
		<div id="react" class="col-xs-12 col-sm-12 col-md-8 col-lg-8 col-lg-offset-2 col-md-offset-2">
			
		</div>
		<script type="text/babel">
			function ob (x) {
				return document.getElementById(x)
			}

			var Book = React.createClass({
				render(){
					return (
						<div className="col-md-3 col-sm-4 book">
							<div className="col-md-12 col text-center">
								<img className="img-responsive" src={this.props.book.thumbnail} />
							</div>
							
							<div className="col-md-12">
								<button className="btn btn-primary btn-block" onClick={this.handleAddRequest.bind(this, this.props.book._id, this.props.userId, this.props.book.title)}>Trade</button>
							</div>
						</div>
					)
				},
				handleAddRequest(bookId, userId, title){
					console.log(bookId + " " + userId);
					$.ajax({
						url: '/api/trade/add',
						type: 'POST',
						data: {
							bookId: bookId,
							toId: userId,
							bookTitle: title
						},
						success: function (data) {
							console.log(data);
							window.location.reload();
						},
						error: function (err) {
							console.log(err);
						}
					})
				}
			});

			var BookList = React.createClass({
				render: function() {
					var users = this.props.data;
					var books = [];
					for (var i = 0; i < users.length; i++){
						books = books.concat(users[i].books.map(function (val) {
							return (
								<Book book={val} key={val.googleBookId} userId={users[i]._id} />
							)
						}))
					}
					return (
						<div className="row text-center">
							{books}
						</div>
					);
				}
			});

			var App = React.createClass({
				getInitialState(){
					return {
						books: {}
					}
				},
				render: function() {
					return (
						<BookList data={this.state.books} />
					);
				},
				componentDidMount(){
					$.ajax({
						url: '/api/getall',
						type: 'GET',
						success: function (data) {
							console.log(data);
							if (data.status == 'OK'){
								this.setState({
									books: data.data
								});
							}
						}.bind(this),
						error: function (err) {
							console.log(err);
						}
					})
				}
			});

			ReactDOM.render(<App />, ob('react'));
		</script>
	</body>
</html>
